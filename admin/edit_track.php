<?php
/**
 * –§–∞–π–ª: admin/edit_track.php
 * –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –≤–∏–¥–µ–æ
 */

require_once '../include_config/config.php';
require_once '../include_config/db_connect.php';

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–ª—å–±–æ–º–æ–≤
$stmt_albums = $pdo->query("SELECT id, title FROM Albums ORDER BY title ASC");
$albums = $stmt_albums->fetchAll();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —Ç—Ä–µ–∫–∞
if (!isset($_GET['id']) || !filter_var($_GET['id'], FILTER_VALIDATE_INT)) {
    header('Location: index.php');
    exit;
}
$trackId = (int)$_GET['id'];

// === –û–ë–†–ê–ë–û–¢–ö–ê POST –ó–ê–ü–†–û–°–ê ===
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $title = trim($_POST['title'] ?? '');
    $description = trim($_POST['description'] ?? '');
    $albumId = filter_var($_POST['albumId'] ?? '', FILTER_VALIDATE_INT);
    $lyrics = trim($_POST['lyrics'] ?? '');
    $errors = [];
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (empty($title)) {
        $errors[] = '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
    }
    
    if (empty($errors)) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            $stmt = $pdo->prepare("SELECT * FROM Track WHERE id = ?");
            $stmt->execute([$trackId]);
            $currentTrack = $stmt->fetch();
            
            if (!$currentTrack) {
                $errors[] = '–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω';
            } else {
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
                function saveFile($file, $subfolder) {
                    if (empty($file['name']) || $file['error'] !== UPLOAD_ERR_OK) {
                        return null;
                    }
                    
                    $uploadDir = '../public/uploads/' . $subfolder . '/';
                    if (!is_dir($uploadDir)) {
                        mkdir($uploadDir, 0755, true);
                    }
                    
                    $fileExtension = pathinfo($file['name'], PATHINFO_EXTENSION);
                    $fileName = uniqid() . '.' . $fileExtension;
                    $uploadPath = $uploadDir . $fileName;
                    
                    if (move_uploaded_file($file['tmp_name'], $uploadPath)) {
                        return '/public/uploads/' . $subfolder . '/' . $fileName;
                    }
                    return false;
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
                $coverPath = $currentTrack['coverImagePath'];
                if (!empty($_FILES['cover']['name'])) {
                    $newCoverPath = saveFile($_FILES['cover'], 'covers');
                    if ($newCoverPath) {
                        @unlink('..' . $coverPath);
                        $coverPath = $newCoverPath;
                    }
                }
                
                $fullTrackPath = $currentTrack['fullAudioPath'];
                if (!empty($_FILES['fullTrack']['name'])) {
                    $newFullTrackPath = saveFile($_FILES['fullTrack'], 'full');
                    if ($newFullTrackPath) {
                        @unlink('..' . $fullTrackPath);
                        $fullTrackPath = $newFullTrackPath;
                    }
                }
                
                $videoPath = $currentTrack['videoPath'];
                if (!empty($_FILES['video']['name'])) {
                    $newVideoPath = saveFile($_FILES['video'], 'videos');
                    if ($newVideoPath) {
                        if ($videoPath) @unlink('..' . $videoPath);
                        $videoPath = $newVideoPath;
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç—Ä–µ–∫
                $sql = "UPDATE Track SET 
                    title = :title, 
                    description = :description, 
                    albumId = :albumId,
                    coverImagePath = :coverImagePath, 
                    fullAudioPath = :fullAudioPath,
                    videoPath = :videoPath
                WHERE id = :id";
                
                $stmt = $pdo->prepare($sql);
                $result = $stmt->execute([
                    ':title' => $title,
                    ':description' => $description,
                    ':albumId' => $albumId ?: null,
                    ':coverImagePath' => $coverPath,
                    ':fullAudioPath' => $fullTrackPath,
                    ':videoPath' => $videoPath,
                    ':id' => $trackId
                ]);
                
                if (!$result) {
                    $errors[] = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç—Ä–µ–∫–∞';
                } else {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
                    if (!empty($lyrics)) {
                        $stmt = $pdo->prepare("
                            INSERT INTO SongLyrics (track_id, lyrics)
                            VALUES (:track_id, :lyrics)
                            ON DUPLICATE KEY UPDATE lyrics = VALUES(lyrics)
                        ");
                        $stmt->execute([
                            ':track_id' => $trackId,
                            ':lyrics' => $lyrics
                        ]);
                    }
                    
                    // –£—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    header('Location: index.php?success=1');
                    exit;
                }
            }
        } catch (Exception $e) {
            $errors[] = '–û—à–∏–±–∫–∞ –ë–î: ' . $e->getMessage();
        }
    }
}

// === –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –¢–†–ï–ö–ê ===
$stmt = $pdo->prepare("SELECT t.*, sl.lyrics FROM Track t 
                       LEFT JOIN SongLyrics sl ON t.id = sl.track_id 
                       WHERE t.id = ?");
$stmt->execute([$trackId]);
$track = $stmt->fetch();

if (!$track) {
    header('Location: index.php');
    exit;
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫ - <?= htmlspecialchars($track['title']) ?></title>
    <link rel="stylesheet" href="../assets/css/admin_style.css">
    <style>
        .form-container { max-width: 900px; }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: bold; color: #FFD700; }
        .form-group input, .form-group textarea, .form-group select { 
            width: 100%; 
            padding: 10px; 
            background-color: #111; 
            border: 1px solid #FFD700; 
            color: #e0e0e0; 
            border-radius: 4px; 
            box-sizing: border-box;
            font-family: inherit;
        }
        .form-group textarea { resize: vertical; min-height: 100px; }
        .form-group input[type="file"] { padding: 5px; border: 2px dashed #FFD700; }
        .submit-button { 
            padding: 12px 30px; 
            background-color: #2b6cb0; 
            color: #fff; 
            border: none; 
            border-radius: 4px; 
            font-size: 1rem; 
            cursor: pointer;
            font-weight: bold;
        }
        .submit-button:hover { background-color: #3182ce; }
        .errors { 
            background-color: #c53030; 
            color: #fff; 
            padding: 15px; 
            border-radius: 4px; 
            margin-bottom: 20px;
        }
        .error-item { margin: 5px 0; }
        .current-file { 
            font-size: 0.85rem; 
            color: #a0aec0; 
            margin-top: 8px;
            padding: 10px;
            background: rgba(255,215,0,0.1);
            border-left: 3px solid #FFD700;
        }
        .tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 30px;
            border-bottom: 2px solid #FFD700;
        }
        .tab-btn {
            padding: 10px 20px;
            background: transparent;
            border: none;
            color: #aaa;
            cursor: pointer;
            font-weight: bold;
            border-bottom: 3px solid transparent;
            transition: all 0.3s;
        }
        .tab-btn.active {
            color: #FFD700;
            border-bottom-color: #FFD700;
        }
        .tab-content { display: none; }
        .tab-content.active { display: block; }
    </style>
</head>
<body>
    <div class="container form-container">
        <div class="breadcrumbs">
            <a href="index.php">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞–º–∏</a> &raquo;
            <span>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫</span>
        </div>
        
        <h1>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫: <?= htmlspecialchars($track['title']) ?></h1>
        
        <?php if (!empty($errors)): ?>
            <div class="errors">
                <strong>‚ùå –û—à–∏–±–∫–∏:</strong>
                <?php foreach ($errors as $error): ?>
                    <div class="error-item">‚Ä¢ <?= htmlspecialchars($error) ?></div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
        
        <!-- –¢–∞–±—ã -->
        <div class="tabs">
            <button class="tab-btn active" onclick="showTab('basic')">üìù –û—Å–Ω–æ–≤–Ω–æ–µ</button>
            <button class="tab-btn" onclick="showTab('files')">üìÅ –§–∞–π–ª—ã</button>
            <button class="tab-btn" onclick="showTab('lyrics')">üìÑ –¢–µ–∫—Å—Ç</button>
            <button class="tab-btn" onclick="showTab('video')">üé¨ –í–∏–¥–µ–æ</button>
        </div>
        
        <form action="edit_track.php?id=<?= $trackId ?>" method="POST" enctype="multipart/form-data">
            
            <!-- –¢–ê–ë 1: –û—Å–Ω–æ–≤–Ω–æ–µ -->
            <div id="basic" class="tab-content active">
                <div class="form-group">
                    <label for="albumId">–ê–ª—å–±–æ–º</label>
                    <select id="albumId" name="albumId">
                        <option value="">-- –ë–µ–∑ –∞–ª—å–±–æ–º–∞ --</option>
                        <?php foreach ($albums as $album): ?>
                            <option value="<?= $album['id'] ?>" 
                                <?= ($track['albumId'] == $album['id']) ? 'selected' : '' ?>>
                                <?= htmlspecialchars($album['title']) ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="title">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ *</label>
                    <input type="text" id="title" name="title" 
                        value="<?= htmlspecialchars($track['title']) ?>" required>
                </div>
                
                <div class="form-group">
                    <label for="description">–û–ø–∏—Å–∞–Ω–∏–µ / –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</label>
                    <textarea id="description" name="description" rows="4">
<?= htmlspecialchars($track['description']) ?></textarea>
                </div>
            </div>
            
            <!-- –¢–ê–ë 2: –§–∞–π–ª—ã (–æ–±–ª–æ–∂–∫–∞ –∏ –∞—É–¥–∏–æ) -->
            <div id="files" class="tab-content">
                <div class="form-group">
                    <label for="cover">–û–±–ª–æ–∂–∫–∞ —Ç—Ä–µ–∫–∞ (JPG, PNG)</label>
                    <input type="file" id="cover" name="cover" accept="image/jpeg, image/png">
                    <div class="current-file">
                        üì∑ –¢–µ–∫—É—â–∞—è –æ–±–ª–æ–∂–∫–∞: 
                        <img src="/<?= htmlspecialchars(ltrim($track['coverImagePath'], '/')) ?>" 
                            alt="–û–±–ª–æ–∂–∫–∞" style="max-width: 100px; margin-top: 5px;">
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="fullTrack">–ê—É–¥–∏–æ—Ñ–∞–π–ª —Ç—Ä–µ–∫–∞ (MP3, WAV)</label>
                    <input type="file" id="fullTrack" name="fullTrack" accept=".mp3, .wav">
                    <div class="current-file">
                        üéµ –¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª: <?= htmlspecialchars(basename($track['fullAudioPath'])) ?>
                    </div>
                </div>
            </div>
            
            <!-- –¢–ê–ë 3: –¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ -->
            <div id="lyrics" class="tab-content">
                <div class="form-group">
                    <label for="lyrics">–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏</label>
                    <textarea id="lyrics" name="lyrics" rows="15" 
                        placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ...">
<?= htmlspecialchars($track['lyrics'] ?? '') ?></textarea>
                    <div class="current-file" style="margin-top: 15px;">
                        üí° –°–æ–≤–µ—Ç: –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ. 
                        –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–æ–±–∞–≤—å—Ç–µ –≤—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: [00:12.00]–¢–µ–∫—Å—Ç
                    </div>
                </div>
            </div>
            
            <!-- –¢–ê–ë 4: –í–∏–¥–µ–æ -->
            <div id="video" class="tab-content">
                <div class="form-group">
                    <label for="video">–í–∏–¥–µ–æ–∫–ª–∏–ø (MP4, WebM)</label>
                    <input type="file" id="video" name="video" accept=".mp4, .webm">
                    <div class="current-file">
                        üé¨ <?php if ($track['videoPath']): ?>
                            –¢–µ–∫—É—â–µ–µ –≤–∏–¥–µ–æ: <?= htmlspecialchars(basename($track['videoPath'])) ?>
                        <?php else: ?>
                            ‚ùå –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
                        <?php endif; ?>
                    </div>
                </div>
                
                <div class="current-file" style="margin-top: 15px; background: rgba(100,200,255,0.1); border-left-color: #4169E1;">
                    üìù –î–ª—è —á–µ–≥–æ: 
                    <ul style="margin: 10px 0 0 20px; color: #a0aec0;">
                        <li>üéµ –ö–ª–∏–ø—ã (–º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ)</li>
                        <li>üé§ –ú–∏–Ω—É—Å–æ–≤–∫–∏ –¥–ª—è –∫–∞—Ä–∞–æ–∫–µ</li>
                        <li>üé¨ –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏</li>
                    </ul>
                </div>
            </div>
            
            <button type="submit" class="submit-button">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
        </form>
    </div>
    
    <script>
    function showTab(tabName) {
        // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Ç–∞–±—ã
        const contents = document.querySelectorAll('.tab-content');
        contents.forEach(c => c.classList.remove('active'));
        
        // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –∫–Ω–æ–ø–æ–∫
        const buttons = document.querySelectorAll('.tab-btn');
        buttons.forEach(b => b.classList.remove('active'));
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–∞–±
        document.getElementById(tabName).classList.add('active');
        event.target.classList.add('active');
    }
    </script>
</body>
</html>